rails generate scaffold Physician name:string

rails generate scaffold Appointment physician:references patient:references appointment_date:datetime

rails generate scaffold Patient name:string

class Physician < ActiveRecord::Base
has_many :appointments
has_many :patients, through: :appointments
end

class Appointment < ActiveRecord::Base
belongs_to :physician
belongs_to :patient
end

class Patient < ActiveRecord::Base
has_many :appointments
has_many :physicians, through: :appointments
end

class Physician < ActiveRecord::Base
has_many :appointments
has_many :patients, through: :appointments
accepts_nested_attributes_for :appointments, reject_if: :
all_blank, allow_destroy: true
end



class Appointment < ActiveRecord::Base
belongs_to :physician
belongs_to :patient
accepts_nested_attributes_for :patient, reject_if: :
all_blank, allow_destroy: true
end


def
physician_params
    params.require(:physician).permit(:name, :appointments_attributes => [:id, :appointment_date, :physician_id, :patient_id, :_destroy, :patient_attributes =>[:id, :name]])

end

gem "cocoon"

application.js
//=require cocoon

physician

<%= link_to_add_association 'add appointment', f, :appointments,'data-association-insertion-node' => "#appointments-patient ol",  'data-association-insertion-method' => "append", :wrap_object => Proc.new {|appointment| appointment.build_patient; appointment } %>
  <hr/>

Physician

    <fieldset id="appointments-patient">
    <ol>
      <%= f.fields_for :appointments do |appointment| %>
        <%= render partial: "appointment_fields", locals: { f: appointment } %>
      <% end %>
    </ol>
  <fieldset/>



_appointment_fields.html.erb
<li class="control-group nested-fields">
  <div class="controls">
    <%= f.datetime_select :appointment_date %>>
       <%= f.fields_for :patient do |appointment_patient| %>
      <%= appointment_patient.text_field :name %>
    <% end %>
    <%= link_to_remove_association "remove", f %>
  </div>
</li>